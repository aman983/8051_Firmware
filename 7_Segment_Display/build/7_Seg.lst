                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module 7_Seg
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _LUT
                                     12 	.globl _Tim_delay_ms
                                     13 	.globl _GPIO_PORT_Write
                                     14 	.globl _GPIO_Write
                                     15 	.globl _Segment_Write_char_PARM_2
                                     16 	.globl _Multi_Segment_write_Digits_PARM_2
                                     17 	.globl _Segment_write_number_PARM_3
                                     18 	.globl _Segment_write_number_PARM_2
                                     19 	.globl _Segment_write_PARM_3
                                     20 	.globl _Segment_write_PARM_2
                                     21 	.globl _Segment_Init
                                     22 	.globl _Segment_write
                                     23 	.globl _Segment_write_number
                                     24 	.globl _Multi_Segment_write_Digits
                                     25 	.globl _Segment_Write_char
                                     26 ;--------------------------------------------------------
                                     27 ; special function registers
                                     28 ;--------------------------------------------------------
                                     29 	.area RSEG    (ABS,DATA)
      000000                         30 	.org 0x0000
                                     31 ;--------------------------------------------------------
                                     32 ; special function bits
                                     33 ;--------------------------------------------------------
                                     34 	.area RSEG    (ABS,DATA)
      000000                         35 	.org 0x0000
                                     36 ;--------------------------------------------------------
                                     37 ; overlayable register banks
                                     38 ;--------------------------------------------------------
                                     39 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         40 	.ds 8
                                     41 ;--------------------------------------------------------
                                     42 ; internal ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area DSEG    (DATA)
      000000                         45 _Seg_port:
      000000                         46 	.ds 3
      000003                         47 _Seg_en_Port:
      000003                         48 	.ds 3
      000006                         49 _Segment_write_PARM_2:
      000006                         50 	.ds 1
      000007                         51 _Segment_write_PARM_3:
      000007                         52 	.ds 1
      000008                         53 _Segment_write_config_65536_17:
      000008                         54 	.ds 3
      00000B                         55 _Segment_write_i_131072_19:
      00000B                         56 	.ds 1
      00000C                         57 _Segment_write_i_131072_23:
      00000C                         58 	.ds 1
      00000D                         59 _Segment_write_number_PARM_2:
      00000D                         60 	.ds 1
      00000E                         61 _Segment_write_number_PARM_3:
      00000E                         62 	.ds 1
      00000F                         63 _Segment_write_number_config_65536_25:
      00000F                         64 	.ds 3
      000012                         65 _Segment_write_number_i_131072_27:
      000012                         66 	.ds 1
      000013                         67 _Segment_write_number_i_131072_31:
      000013                         68 	.ds 1
      000014                         69 _Multi_Segment_write_Digits_PARM_2:
      000014                         70 	.ds 2
      000016                         71 _Multi_Segment_write_Digits_config_65536_33:
      000016                         72 	.ds 3
      000019                         73 _Multi_Segment_write_Digits_is_negative_65536_34:
      000019                         74 	.ds 1
      00001A                         75 _Segment_Write_char_PARM_2:
      00001A                         76 	.ds 3
      00001D                         77 _Segment_Write_char_config_65536_40:
      00001D                         78 	.ds 3
                                     79 ;--------------------------------------------------------
                                     80 ; overlayable items in internal ram 
                                     81 ;--------------------------------------------------------
                                     82 	.area	OSEG    (OVR,DATA)
                                     83 	.area	OSEG    (OVR,DATA)
                                     84 ;--------------------------------------------------------
                                     85 ; indirectly addressable internal ram data
                                     86 ;--------------------------------------------------------
                                     87 	.area ISEG    (DATA)
                                     88 ;--------------------------------------------------------
                                     89 ; absolute internal ram data
                                     90 ;--------------------------------------------------------
                                     91 	.area IABS    (ABS,DATA)
                                     92 	.area IABS    (ABS,DATA)
                                     93 ;--------------------------------------------------------
                                     94 ; bit data
                                     95 ;--------------------------------------------------------
                                     96 	.area BSEG    (BIT)
                                     97 ;--------------------------------------------------------
                                     98 ; paged external ram data
                                     99 ;--------------------------------------------------------
                                    100 	.area PSEG    (PAG,XDATA)
                                    101 ;--------------------------------------------------------
                                    102 ; external ram data
                                    103 ;--------------------------------------------------------
                                    104 	.area XSEG    (XDATA)
                                    105 ;--------------------------------------------------------
                                    106 ; absolute external ram data
                                    107 ;--------------------------------------------------------
                                    108 	.area XABS    (ABS,XDATA)
                                    109 ;--------------------------------------------------------
                                    110 ; external initialized ram data
                                    111 ;--------------------------------------------------------
                                    112 	.area XISEG   (XDATA)
                                    113 	.area HOME    (CODE)
                                    114 	.area GSINIT0 (CODE)
                                    115 	.area GSINIT1 (CODE)
                                    116 	.area GSINIT2 (CODE)
                                    117 	.area GSINIT3 (CODE)
                                    118 	.area GSINIT4 (CODE)
                                    119 	.area GSINIT5 (CODE)
                                    120 	.area GSINIT  (CODE)
                                    121 	.area GSFINAL (CODE)
                                    122 	.area CSEG    (CODE)
                                    123 ;--------------------------------------------------------
                                    124 ; global & static initialisations
                                    125 ;--------------------------------------------------------
                                    126 	.area HOME    (CODE)
                                    127 	.area GSINIT  (CODE)
                                    128 	.area GSFINAL (CODE)
                                    129 	.area GSINIT  (CODE)
                                    130 ;--------------------------------------------------------
                                    131 ; Home
                                    132 ;--------------------------------------------------------
                                    133 	.area HOME    (CODE)
                                    134 	.area HOME    (CODE)
                                    135 ;--------------------------------------------------------
                                    136 ; code
                                    137 ;--------------------------------------------------------
                                    138 	.area CSEG    (CODE)
                                    139 ;------------------------------------------------------------
                                    140 ;Allocation info for local variables in function 'LUT'
                                    141 ;------------------------------------------------------------
                                    142 ;c                         Allocated to registers r7 
                                    143 ;------------------------------------------------------------
                                    144 ;	../HAL/7_Seg.c:9: unsigned char LUT(char c) {
                                    145 ;	-----------------------------------------
                                    146 ;	 function LUT
                                    147 ;	-----------------------------------------
      000000                        148 _LUT:
                           000007   149 	ar7 = 0x07
                           000006   150 	ar6 = 0x06
                           000005   151 	ar5 = 0x05
                           000004   152 	ar4 = 0x04
                           000003   153 	ar3 = 0x03
                           000002   154 	ar2 = 0x02
                           000001   155 	ar1 = 0x01
                           000000   156 	ar0 = 0x00
      000000 AF 82            [24]  157 	mov	r7,dpl
                                    158 ;	../HAL/7_Seg.c:10: switch (c) {
      000002 BF 20 00         [24]  159 	cjne	r7,#0x20,00169$
      000005                        160 00169$:
      000005 50 03            [24]  161 	jnc	00170$
      000007 02r01r65         [24]  162 	ljmp	00157$
      00000A                        163 00170$:
      00000A EF               [12]  164 	mov	a,r7
      00000B 24 85            [12]  165 	add	a,#0xff - 0x7a
      00000D 50 03            [24]  166 	jnc	00171$
      00000F 02r01r65         [24]  167 	ljmp	00157$
      000012                        168 00171$:
      000012 EF               [12]  169 	mov	a,r7
      000013 24 E0            [12]  170 	add	a,#0xe0
      000015 FF               [12]  171 	mov	r7,a
      000016 24 0A            [12]  172 	add	a,#(00172$-3-.)
      000018 83               [24]  173 	movc	a,@a+pc
      000019 F5 82            [12]  174 	mov	dpl,a
      00001B EF               [12]  175 	mov	a,r7
      00001C 24 5F            [12]  176 	add	a,#(00173$-3-.)
      00001E 83               [24]  177 	movc	a,@a+pc
      00001F F5 83            [12]  178 	mov	dph,a
      000021 E4               [12]  179 	clr	a
      000022 73               [24]  180 	jmp	@a+dptr
      000023                        181 00172$:
      000023r61                     182 	.db	00156$
      000024r65                     183 	.db	00157$
      000025r65                     184 	.db	00157$
      000026r65                     185 	.db	00157$
      000027r65                     186 	.db	00157$
      000028r65                     187 	.db	00157$
      000029r65                     188 	.db	00157$
      00002Ar65                     189 	.db	00157$
      00002Br65                     190 	.db	00157$
      00002Cr65                     191 	.db	00157$
      00002Dr65                     192 	.db	00157$
      00002Er65                     193 	.db	00157$
      00002Fr65                     194 	.db	00157$
      000030r55                     195 	.db	00153$
      000031r65                     196 	.db	00157$
      000032r65                     197 	.db	00157$
      000033rD9                     198 	.db	00101$
      000034rDD                     199 	.db	00102$
      000035rE1                     200 	.db	00103$
      000036rE5                     201 	.db	00104$
      000037rE9                     202 	.db	00105$
      000038rED                     203 	.db	00106$
      000039rF1                     204 	.db	00107$
      00003ArF5                     205 	.db	00108$
      00003BrF9                     206 	.db	00109$
      00003CrFD                     207 	.db	00110$
      00003Dr65                     208 	.db	00157$
      00003Er65                     209 	.db	00157$
      00003Fr65                     210 	.db	00157$
      000040r5D                     211 	.db	00155$
      000041r65                     212 	.db	00157$
      000042r65                     213 	.db	00157$
      000043r65                     214 	.db	00157$
      000044r01                     215 	.db	00112$
      000045r05                     216 	.db	00114$
      000046r09                     217 	.db	00116$
      000047r0D                     218 	.db	00118$
      000048r11                     219 	.db	00120$
      000049r15                     220 	.db	00122$
      00004Ar19                     221 	.db	00124$
      00004Br1D                     222 	.db	00126$
      00004Cr21                     223 	.db	00128$
      00004Dr25                     224 	.db	00130$
      00004Er65                     225 	.db	00157$
      00004Fr29                     226 	.db	00132$
      000050r65                     227 	.db	00157$
      000051r2D                     228 	.db	00134$
      000052r31                     229 	.db	00136$
      000053r35                     230 	.db	00138$
      000054r39                     231 	.db	00140$
      000055r3D                     232 	.db	00142$
      000056r41                     233 	.db	00144$
      000057r45                     234 	.db	00146$
      000058r49                     235 	.db	00148$
      000059r65                     236 	.db	00157$
      00005Ar65                     237 	.db	00157$
      00005Br65                     238 	.db	00157$
      00005Cr4D                     239 	.db	00150$
      00005Dr51                     240 	.db	00152$
      00005Er65                     241 	.db	00157$
      00005Fr65                     242 	.db	00157$
      000060r65                     243 	.db	00157$
      000061r65                     244 	.db	00157$
      000062r59                     245 	.db	00154$
      000063r65                     246 	.db	00157$
      000064r01                     247 	.db	00112$
      000065r05                     248 	.db	00114$
      000066r09                     249 	.db	00116$
      000067r0D                     250 	.db	00118$
      000068r11                     251 	.db	00120$
      000069r15                     252 	.db	00122$
      00006Ar19                     253 	.db	00124$
      00006Br1D                     254 	.db	00126$
      00006Cr21                     255 	.db	00128$
      00006Dr25                     256 	.db	00130$
      00006Er65                     257 	.db	00157$
      00006Fr29                     258 	.db	00132$
      000070r65                     259 	.db	00157$
      000071r2D                     260 	.db	00134$
      000072r31                     261 	.db	00136$
      000073r35                     262 	.db	00138$
      000074r39                     263 	.db	00140$
      000075r3D                     264 	.db	00142$
      000076r41                     265 	.db	00144$
      000077r45                     266 	.db	00146$
      000078r49                     267 	.db	00148$
      000079r65                     268 	.db	00157$
      00007Ar65                     269 	.db	00157$
      00007Br65                     270 	.db	00157$
      00007Cr4D                     271 	.db	00150$
      00007Dr51                     272 	.db	00152$
      00007E                        273 00173$:
      00007Es01                     274 	.db	00156$>>8
      00007Fs01                     275 	.db	00157$>>8
      000080s01                     276 	.db	00157$>>8
      000081s01                     277 	.db	00157$>>8
      000082s01                     278 	.db	00157$>>8
      000083s01                     279 	.db	00157$>>8
      000084s01                     280 	.db	00157$>>8
      000085s01                     281 	.db	00157$>>8
      000086s01                     282 	.db	00157$>>8
      000087s01                     283 	.db	00157$>>8
      000088s01                     284 	.db	00157$>>8
      000089s01                     285 	.db	00157$>>8
      00008As01                     286 	.db	00157$>>8
      00008Bs01                     287 	.db	00153$>>8
      00008Cs01                     288 	.db	00157$>>8
      00008Ds01                     289 	.db	00157$>>8
      00008Es00                     290 	.db	00101$>>8
      00008Fs00                     291 	.db	00102$>>8
      000090s00                     292 	.db	00103$>>8
      000091s00                     293 	.db	00104$>>8
      000092s00                     294 	.db	00105$>>8
      000093s00                     295 	.db	00106$>>8
      000094s00                     296 	.db	00107$>>8
      000095s00                     297 	.db	00108$>>8
      000096s00                     298 	.db	00109$>>8
      000097s00                     299 	.db	00110$>>8
      000098s01                     300 	.db	00157$>>8
      000099s01                     301 	.db	00157$>>8
      00009As01                     302 	.db	00157$>>8
      00009Bs01                     303 	.db	00155$>>8
      00009Cs01                     304 	.db	00157$>>8
      00009Ds01                     305 	.db	00157$>>8
      00009Es01                     306 	.db	00157$>>8
      00009Fs01                     307 	.db	00112$>>8
      0000A0s01                     308 	.db	00114$>>8
      0000A1s01                     309 	.db	00116$>>8
      0000A2s01                     310 	.db	00118$>>8
      0000A3s01                     311 	.db	00120$>>8
      0000A4s01                     312 	.db	00122$>>8
      0000A5s01                     313 	.db	00124$>>8
      0000A6s01                     314 	.db	00126$>>8
      0000A7s01                     315 	.db	00128$>>8
      0000A8s01                     316 	.db	00130$>>8
      0000A9s01                     317 	.db	00157$>>8
      0000AAs01                     318 	.db	00132$>>8
      0000ABs01                     319 	.db	00157$>>8
      0000ACs01                     320 	.db	00134$>>8
      0000ADs01                     321 	.db	00136$>>8
      0000AEs01                     322 	.db	00138$>>8
      0000AFs01                     323 	.db	00140$>>8
      0000B0s01                     324 	.db	00142$>>8
      0000B1s01                     325 	.db	00144$>>8
      0000B2s01                     326 	.db	00146$>>8
      0000B3s01                     327 	.db	00148$>>8
      0000B4s01                     328 	.db	00157$>>8
      0000B5s01                     329 	.db	00157$>>8
      0000B6s01                     330 	.db	00157$>>8
      0000B7s01                     331 	.db	00150$>>8
      0000B8s01                     332 	.db	00152$>>8
      0000B9s01                     333 	.db	00157$>>8
      0000BAs01                     334 	.db	00157$>>8
      0000BBs01                     335 	.db	00157$>>8
      0000BCs01                     336 	.db	00157$>>8
      0000BDs01                     337 	.db	00154$>>8
      0000BEs01                     338 	.db	00157$>>8
      0000BFs01                     339 	.db	00112$>>8
      0000C0s01                     340 	.db	00114$>>8
      0000C1s01                     341 	.db	00116$>>8
      0000C2s01                     342 	.db	00118$>>8
      0000C3s01                     343 	.db	00120$>>8
      0000C4s01                     344 	.db	00122$>>8
      0000C5s01                     345 	.db	00124$>>8
      0000C6s01                     346 	.db	00126$>>8
      0000C7s01                     347 	.db	00128$>>8
      0000C8s01                     348 	.db	00130$>>8
      0000C9s01                     349 	.db	00157$>>8
      0000CAs01                     350 	.db	00132$>>8
      0000CBs01                     351 	.db	00157$>>8
      0000CCs01                     352 	.db	00134$>>8
      0000CDs01                     353 	.db	00136$>>8
      0000CEs01                     354 	.db	00138$>>8
      0000CFs01                     355 	.db	00140$>>8
      0000D0s01                     356 	.db	00142$>>8
      0000D1s01                     357 	.db	00144$>>8
      0000D2s01                     358 	.db	00146$>>8
      0000D3s01                     359 	.db	00148$>>8
      0000D4s01                     360 	.db	00157$>>8
      0000D5s01                     361 	.db	00157$>>8
      0000D6s01                     362 	.db	00157$>>8
      0000D7s01                     363 	.db	00150$>>8
      0000D8s01                     364 	.db	00152$>>8
                                    365 ;	../HAL/7_Seg.c:12: case '0': return 0x3F;
      0000D9                        366 00101$:
      0000D9 75 82 3F         [24]  367 	mov	dpl,#0x3f
      0000DC 22               [24]  368 	ret
                                    369 ;	../HAL/7_Seg.c:13: case '1': return 0x06;
      0000DD                        370 00102$:
      0000DD 75 82 06         [24]  371 	mov	dpl,#0x06
      0000E0 22               [24]  372 	ret
                                    373 ;	../HAL/7_Seg.c:14: case '2': return 0x5B;
      0000E1                        374 00103$:
      0000E1 75 82 5B         [24]  375 	mov	dpl,#0x5b
      0000E4 22               [24]  376 	ret
                                    377 ;	../HAL/7_Seg.c:15: case '3': return 0x4F;
      0000E5                        378 00104$:
      0000E5 75 82 4F         [24]  379 	mov	dpl,#0x4f
      0000E8 22               [24]  380 	ret
                                    381 ;	../HAL/7_Seg.c:16: case '4': return 0x66;
      0000E9                        382 00105$:
      0000E9 75 82 66         [24]  383 	mov	dpl,#0x66
      0000EC 22               [24]  384 	ret
                                    385 ;	../HAL/7_Seg.c:17: case '5': return 0x6D;
      0000ED                        386 00106$:
      0000ED 75 82 6D         [24]  387 	mov	dpl,#0x6d
      0000F0 22               [24]  388 	ret
                                    389 ;	../HAL/7_Seg.c:18: case '6': return 0x7D;
      0000F1                        390 00107$:
      0000F1 75 82 7D         [24]  391 	mov	dpl,#0x7d
      0000F4 22               [24]  392 	ret
                                    393 ;	../HAL/7_Seg.c:19: case '7': return 0x07;
      0000F5                        394 00108$:
      0000F5 75 82 07         [24]  395 	mov	dpl,#0x07
      0000F8 22               [24]  396 	ret
                                    397 ;	../HAL/7_Seg.c:20: case '8': return 0x7F;
      0000F9                        398 00109$:
      0000F9 75 82 7F         [24]  399 	mov	dpl,#0x7f
      0000FC 22               [24]  400 	ret
                                    401 ;	../HAL/7_Seg.c:21: case '9': return 0x6F;
      0000FD                        402 00110$:
      0000FD 75 82 6F         [24]  403 	mov	dpl,#0x6f
      000100 22               [24]  404 	ret
                                    405 ;	../HAL/7_Seg.c:24: case 'A': case 'a': return 0x77;
      000101                        406 00112$:
      000101 75 82 77         [24]  407 	mov	dpl,#0x77
      000104 22               [24]  408 	ret
                                    409 ;	../HAL/7_Seg.c:25: case 'B': case 'b': return 0x7C;
      000105                        410 00114$:
      000105 75 82 7C         [24]  411 	mov	dpl,#0x7c
      000108 22               [24]  412 	ret
                                    413 ;	../HAL/7_Seg.c:26: case 'C': case 'c': return 0x39;
      000109                        414 00116$:
      000109 75 82 39         [24]  415 	mov	dpl,#0x39
      00010C 22               [24]  416 	ret
                                    417 ;	../HAL/7_Seg.c:27: case 'D': case 'd': return 0x5E;
      00010D                        418 00118$:
      00010D 75 82 5E         [24]  419 	mov	dpl,#0x5e
      000110 22               [24]  420 	ret
                                    421 ;	../HAL/7_Seg.c:28: case 'E': case 'e': return 0x79;
      000111                        422 00120$:
      000111 75 82 79         [24]  423 	mov	dpl,#0x79
                                    424 ;	../HAL/7_Seg.c:29: case 'F': case 'f': return 0x71;
      000114 22               [24]  425 	ret
      000115                        426 00122$:
      000115 75 82 71         [24]  427 	mov	dpl,#0x71
                                    428 ;	../HAL/7_Seg.c:30: case 'G': case 'g': return 0x3D;
      000118 22               [24]  429 	ret
      000119                        430 00124$:
      000119 75 82 3D         [24]  431 	mov	dpl,#0x3d
                                    432 ;	../HAL/7_Seg.c:31: case 'H': case 'h': return 0x76;
      00011C 22               [24]  433 	ret
      00011D                        434 00126$:
      00011D 75 82 76         [24]  435 	mov	dpl,#0x76
                                    436 ;	../HAL/7_Seg.c:32: case 'I': case 'i': return 0x06;
      000120 22               [24]  437 	ret
      000121                        438 00128$:
      000121 75 82 06         [24]  439 	mov	dpl,#0x06
                                    440 ;	../HAL/7_Seg.c:33: case 'J': case 'j': return 0x1E;
      000124 22               [24]  441 	ret
      000125                        442 00130$:
      000125 75 82 1E         [24]  443 	mov	dpl,#0x1e
                                    444 ;	../HAL/7_Seg.c:34: case 'L': case 'l': return 0x38;
      000128 22               [24]  445 	ret
      000129                        446 00132$:
      000129 75 82 38         [24]  447 	mov	dpl,#0x38
                                    448 ;	../HAL/7_Seg.c:35: case 'N': case 'n': return 0x54;
      00012C 22               [24]  449 	ret
      00012D                        450 00134$:
      00012D 75 82 54         [24]  451 	mov	dpl,#0x54
                                    452 ;	../HAL/7_Seg.c:36: case 'O': case 'o': return 0x3F;
      000130 22               [24]  453 	ret
      000131                        454 00136$:
      000131 75 82 3F         [24]  455 	mov	dpl,#0x3f
                                    456 ;	../HAL/7_Seg.c:37: case 'P': case 'p': return 0x73;
      000134 22               [24]  457 	ret
      000135                        458 00138$:
      000135 75 82 73         [24]  459 	mov	dpl,#0x73
                                    460 ;	../HAL/7_Seg.c:38: case 'Q': case 'q': return 0x67;
      000138 22               [24]  461 	ret
      000139                        462 00140$:
      000139 75 82 67         [24]  463 	mov	dpl,#0x67
                                    464 ;	../HAL/7_Seg.c:39: case 'R': case 'r': return 0x50;
      00013C 22               [24]  465 	ret
      00013D                        466 00142$:
      00013D 75 82 50         [24]  467 	mov	dpl,#0x50
                                    468 ;	../HAL/7_Seg.c:40: case 'S': case 's': return 0x6D;
      000140 22               [24]  469 	ret
      000141                        470 00144$:
      000141 75 82 6D         [24]  471 	mov	dpl,#0x6d
                                    472 ;	../HAL/7_Seg.c:41: case 'T': case 't': return 0x78;
      000144 22               [24]  473 	ret
      000145                        474 00146$:
      000145 75 82 78         [24]  475 	mov	dpl,#0x78
                                    476 ;	../HAL/7_Seg.c:42: case 'U': case 'u': return 0x3E;
      000148 22               [24]  477 	ret
      000149                        478 00148$:
      000149 75 82 3E         [24]  479 	mov	dpl,#0x3e
                                    480 ;	../HAL/7_Seg.c:43: case 'Y': case 'y': return 0x6E;
      00014C 22               [24]  481 	ret
      00014D                        482 00150$:
      00014D 75 82 6E         [24]  483 	mov	dpl,#0x6e
                                    484 ;	../HAL/7_Seg.c:44: case 'Z': case 'z': return 0x5B;
      000150 22               [24]  485 	ret
      000151                        486 00152$:
      000151 75 82 5B         [24]  487 	mov	dpl,#0x5b
                                    488 ;	../HAL/7_Seg.c:47: case '-': return 0x40;
      000154 22               [24]  489 	ret
      000155                        490 00153$:
      000155 75 82 40         [24]  491 	mov	dpl,#0x40
                                    492 ;	../HAL/7_Seg.c:48: case '_': return 0x08;
      000158 22               [24]  493 	ret
      000159                        494 00154$:
      000159 75 82 08         [24]  495 	mov	dpl,#0x08
                                    496 ;	../HAL/7_Seg.c:49: case '=': return 0x48;
      00015C 22               [24]  497 	ret
      00015D                        498 00155$:
      00015D 75 82 48         [24]  499 	mov	dpl,#0x48
                                    500 ;	../HAL/7_Seg.c:50: case ' ': return 0x00;
      000160 22               [24]  501 	ret
      000161                        502 00156$:
      000161 75 82 00         [24]  503 	mov	dpl,#0x00
                                    504 ;	../HAL/7_Seg.c:52: default: return 0x00;  // Blank for unsupported characters
      000164 22               [24]  505 	ret
      000165                        506 00157$:
      000165 75 82 00         [24]  507 	mov	dpl,#0x00
                                    508 ;	../HAL/7_Seg.c:53: }
                                    509 ;	../HAL/7_Seg.c:54: }
      000168 22               [24]  510 	ret
                                    511 ;------------------------------------------------------------
                                    512 ;Allocation info for local variables in function 'Segment_Init'
                                    513 ;------------------------------------------------------------
                                    514 ;config                    Allocated to registers r5 r6 r7 
                                    515 ;------------------------------------------------------------
                                    516 ;	../HAL/7_Seg.c:72: void Segment_Init(Seg_config_t *config){
                                    517 ;	-----------------------------------------
                                    518 ;	 function Segment_Init
                                    519 ;	-----------------------------------------
      000169                        520 _Segment_Init:
                                    521 ;	../HAL/7_Seg.c:73: Seg_port.Port = config->Segment_Port;
      000169 AD 82            [24]  522 	mov	r5,dpl
      00016B AE 83            [24]  523 	mov	r6,dph
      00016D AF F0            [24]  524 	mov	r7,b
      00016F 12r00r00         [24]  525 	lcall	__gptrget
      000172 FC               [12]  526 	mov	r4,a
      000173 8C*00            [24]  527 	mov	_Seg_port,r4
                                    528 ;	../HAL/7_Seg.c:74: Seg_port.Mode = GPIO_OUTPUT;
      000175 75*02 00         [24]  529 	mov	(_Seg_port + 0x0002),#0x00
                                    530 ;	../HAL/7_Seg.c:76: Seg_en_Port.Port = config->Seg_Enable_Port;
      000178 0D               [12]  531 	inc	r5
      000179 BD 00 01         [24]  532 	cjne	r5,#0x00,00103$
      00017C 0E               [12]  533 	inc	r6
      00017D                        534 00103$:
      00017D 8D 82            [24]  535 	mov	dpl,r5
      00017F 8E 83            [24]  536 	mov	dph,r6
      000181 8F F0            [24]  537 	mov	b,r7
      000183 12r00r00         [24]  538 	lcall	__gptrget
      000186 FD               [12]  539 	mov	r5,a
      000187 8D*03            [24]  540 	mov	_Seg_en_Port,r5
                                    541 ;	../HAL/7_Seg.c:77: Seg_en_Port.Mode = GPIO_OUTPUT;
      000189 75*05 00         [24]  542 	mov	(_Seg_en_Port + 0x0002),#0x00
                                    543 ;	../HAL/7_Seg.c:78: }
      00018C 22               [24]  544 	ret
                                    545 ;------------------------------------------------------------
                                    546 ;Allocation info for local variables in function 'Segment_write'
                                    547 ;------------------------------------------------------------
                                    548 ;display_number            Allocated with name '_Segment_write_PARM_2'
                                    549 ;val                       Allocated with name '_Segment_write_PARM_3'
                                    550 ;config                    Allocated with name '_Segment_write_config_65536_17'
                                    551 ;i                         Allocated with name '_Segment_write_i_131072_19'
                                    552 ;i                         Allocated with name '_Segment_write_i_131072_23'
                                    553 ;------------------------------------------------------------
                                    554 ;	../HAL/7_Seg.c:81: void Segment_write(Seg_config_t *config, unsigned char display_number, unsigned char val){
                                    555 ;	-----------------------------------------
                                    556 ;	 function Segment_write
                                    557 ;	-----------------------------------------
      00018D                        558 _Segment_write:
      00018D 85 82*08         [24]  559 	mov	_Segment_write_config_65536_17,dpl
      000190 85 83*09         [24]  560 	mov	(_Segment_write_config_65536_17 + 1),dph
      000193 85 F0*0A         [24]  561 	mov	(_Segment_write_config_65536_17 + 2),b
                                    562 ;	../HAL/7_Seg.c:83: for(unsigned char i =0; i<4; i++){
      000196 74 02            [12]  563 	mov	a,#0x02
      000198 25*08            [12]  564 	add	a,_Segment_write_config_65536_17
      00019A FA               [12]  565 	mov	r2,a
      00019B E4               [12]  566 	clr	a
      00019C 35*09            [12]  567 	addc	a,(_Segment_write_config_65536_17 + 1)
      00019E FB               [12]  568 	mov	r3,a
      00019F AC*0A            [24]  569 	mov	r4,(_Segment_write_config_65536_17 + 2)
      0001A1 75*0B 00         [24]  570 	mov	_Segment_write_i_131072_19,#0x00
      0001A4                        571 00107$:
      0001A4 74 FC            [12]  572 	mov	a,#0x100 - 0x04
      0001A6 25*0B            [12]  573 	add	a,_Segment_write_i_131072_19
      0001A8 40 31            [24]  574 	jc	00101$
                                    575 ;	../HAL/7_Seg.c:84: Seg_en_Port.Pin = config->Seg_Enable_Pins[i];
      0001AA E5*0B            [12]  576 	mov	a,_Segment_write_i_131072_19
      0001AC 2A               [12]  577 	add	a,r2
      0001AD FD               [12]  578 	mov	r5,a
      0001AE E4               [12]  579 	clr	a
      0001AF 3B               [12]  580 	addc	a,r3
      0001B0 FE               [12]  581 	mov	r6,a
      0001B1 8C 07            [24]  582 	mov	ar7,r4
      0001B3 8D 82            [24]  583 	mov	dpl,r5
      0001B5 8E 83            [24]  584 	mov	dph,r6
      0001B7 8F F0            [24]  585 	mov	b,r7
      0001B9 12r00r00         [24]  586 	lcall	__gptrget
      0001BC FD               [12]  587 	mov	r5,a
      0001BD 8D*04            [24]  588 	mov	(_Seg_en_Port + 0x0001),r5
                                    589 ;	../HAL/7_Seg.c:85: GPIO_Write(&Seg_en_Port, GPIO_LOW);
      0001BF 75*00 00         [24]  590 	mov	_GPIO_Write_PARM_2,#0x00
      0001C2 90r00r03         [24]  591 	mov	dptr,#_Seg_en_Port
      0001C5 75 F0 40         [24]  592 	mov	b,#0x40
      0001C8 C0 04            [24]  593 	push	ar4
      0001CA C0 03            [24]  594 	push	ar3
      0001CC C0 02            [24]  595 	push	ar2
      0001CE 12r00r00         [24]  596 	lcall	_GPIO_Write
      0001D1 D0 02            [24]  597 	pop	ar2
      0001D3 D0 03            [24]  598 	pop	ar3
      0001D5 D0 04            [24]  599 	pop	ar4
                                    600 ;	../HAL/7_Seg.c:83: for(unsigned char i =0; i<4; i++){
      0001D7 05*0B            [12]  601 	inc	_Segment_write_i_131072_19
      0001D9 80 C9            [24]  602 	sjmp	00107$
      0001DB                        603 00101$:
                                    604 ;	../HAL/7_Seg.c:87: GPIO_PORT_Write(&Seg_port,  val);
      0001DB 85*07*00         [24]  605 	mov	_GPIO_PORT_Write_PARM_2,_Segment_write_PARM_3
      0001DE 90r00r00         [24]  606 	mov	dptr,#_Seg_port
      0001E1 75 F0 40         [24]  607 	mov	b,#0x40
      0001E4 12r00r00         [24]  608 	lcall	_GPIO_PORT_Write
                                    609 ;	../HAL/7_Seg.c:88: if(display_number < 4){
      0001E7 74 FC            [12]  610 	mov	a,#0x100 - 0x04
      0001E9 25*06            [12]  611 	add	a,_Segment_write_PARM_2
      0001EB 40 2C            [24]  612 	jc	00103$
                                    613 ;	../HAL/7_Seg.c:89: Seg_en_Port.Pin = config->Seg_Enable_Pins[display_number];
      0001ED 74 02            [12]  614 	mov	a,#0x02
      0001EF 25*08            [12]  615 	add	a,_Segment_write_config_65536_17
      0001F1 FD               [12]  616 	mov	r5,a
      0001F2 E4               [12]  617 	clr	a
      0001F3 35*09            [12]  618 	addc	a,(_Segment_write_config_65536_17 + 1)
      0001F5 FE               [12]  619 	mov	r6,a
      0001F6 AF*0A            [24]  620 	mov	r7,(_Segment_write_config_65536_17 + 2)
      0001F8 E5*06            [12]  621 	mov	a,_Segment_write_PARM_2
      0001FA 2D               [12]  622 	add	a,r5
      0001FB FD               [12]  623 	mov	r5,a
      0001FC E4               [12]  624 	clr	a
      0001FD 3E               [12]  625 	addc	a,r6
      0001FE FE               [12]  626 	mov	r6,a
      0001FF 8D 82            [24]  627 	mov	dpl,r5
      000201 8E 83            [24]  628 	mov	dph,r6
      000203 8F F0            [24]  629 	mov	b,r7
      000205 12r00r00         [24]  630 	lcall	__gptrget
      000208 FD               [12]  631 	mov	r5,a
      000209 8D*04            [24]  632 	mov	(_Seg_en_Port + 0x0001),r5
                                    633 ;	../HAL/7_Seg.c:90: GPIO_Write(&Seg_en_Port, GPIO_HIGH);
      00020B 75*00 01         [24]  634 	mov	_GPIO_Write_PARM_2,#0x01
      00020E 90r00r03         [24]  635 	mov	dptr,#_Seg_en_Port
      000211 75 F0 40         [24]  636 	mov	b,#0x40
      000214 12r00r00         [24]  637 	lcall	_GPIO_Write
      000217 80 01            [24]  638 	sjmp	00104$
      000219                        639 00103$:
                                    640 ;	../HAL/7_Seg.c:92: return;
      000219 22               [24]  641 	ret
      00021A                        642 00104$:
                                    643 ;	../HAL/7_Seg.c:94: Tim_delay_ms(1);
      00021A 90 00 01         [24]  644 	mov	dptr,#0x0001
      00021D 12r00r00         [24]  645 	lcall	_Tim_delay_ms
                                    646 ;	../HAL/7_Seg.c:96: for(unsigned char i =0; i<4; i++){
      000220 74 02            [12]  647 	mov	a,#0x02
      000222 25*08            [12]  648 	add	a,_Segment_write_config_65536_17
      000224 FD               [12]  649 	mov	r5,a
      000225 E4               [12]  650 	clr	a
      000226 35*09            [12]  651 	addc	a,(_Segment_write_config_65536_17 + 1)
      000228 FE               [12]  652 	mov	r6,a
      000229 AF*0A            [24]  653 	mov	r7,(_Segment_write_config_65536_17 + 2)
      00022B 75*0C 00         [24]  654 	mov	_Segment_write_i_131072_23,#0x00
      00022E                        655 00110$:
      00022E 74 FC            [12]  656 	mov	a,#0x100 - 0x04
      000230 25*0C            [12]  657 	add	a,_Segment_write_i_131072_23
      000232 40 31            [24]  658 	jc	00112$
                                    659 ;	../HAL/7_Seg.c:97: Seg_en_Port.Pin = config->Seg_Enable_Pins[i];
      000234 E5*0C            [12]  660 	mov	a,_Segment_write_i_131072_23
      000236 2D               [12]  661 	add	a,r5
      000237 FA               [12]  662 	mov	r2,a
      000238 E4               [12]  663 	clr	a
      000239 3E               [12]  664 	addc	a,r6
      00023A FB               [12]  665 	mov	r3,a
      00023B 8F 04            [24]  666 	mov	ar4,r7
      00023D 8A 82            [24]  667 	mov	dpl,r2
      00023F 8B 83            [24]  668 	mov	dph,r3
      000241 8C F0            [24]  669 	mov	b,r4
      000243 12r00r00         [24]  670 	lcall	__gptrget
      000246 FA               [12]  671 	mov	r2,a
      000247 8A*04            [24]  672 	mov	(_Seg_en_Port + 0x0001),r2
                                    673 ;	../HAL/7_Seg.c:98: GPIO_Write(&Seg_en_Port, GPIO_LOW);
      000249 75*00 00         [24]  674 	mov	_GPIO_Write_PARM_2,#0x00
      00024C 90r00r03         [24]  675 	mov	dptr,#_Seg_en_Port
      00024F 75 F0 40         [24]  676 	mov	b,#0x40
      000252 C0 07            [24]  677 	push	ar7
      000254 C0 06            [24]  678 	push	ar6
      000256 C0 05            [24]  679 	push	ar5
      000258 12r00r00         [24]  680 	lcall	_GPIO_Write
      00025B D0 05            [24]  681 	pop	ar5
      00025D D0 06            [24]  682 	pop	ar6
      00025F D0 07            [24]  683 	pop	ar7
                                    684 ;	../HAL/7_Seg.c:96: for(unsigned char i =0; i<4; i++){
      000261 05*0C            [12]  685 	inc	_Segment_write_i_131072_23
      000263 80 C9            [24]  686 	sjmp	00110$
      000265                        687 00112$:
                                    688 ;	../HAL/7_Seg.c:100: }
      000265 22               [24]  689 	ret
                                    690 ;------------------------------------------------------------
                                    691 ;Allocation info for local variables in function 'Segment_write_number'
                                    692 ;------------------------------------------------------------
                                    693 ;display_number            Allocated with name '_Segment_write_number_PARM_2'
                                    694 ;number                    Allocated with name '_Segment_write_number_PARM_3'
                                    695 ;config                    Allocated with name '_Segment_write_number_config_65536_25'
                                    696 ;i                         Allocated with name '_Segment_write_number_i_131072_27'
                                    697 ;i                         Allocated with name '_Segment_write_number_i_131072_31'
                                    698 ;------------------------------------------------------------
                                    699 ;	../HAL/7_Seg.c:103: void Segment_write_number(Seg_config_t *config, unsigned char display_number, unsigned char number){
                                    700 ;	-----------------------------------------
                                    701 ;	 function Segment_write_number
                                    702 ;	-----------------------------------------
      000266                        703 _Segment_write_number:
      000266 85 82*0F         [24]  704 	mov	_Segment_write_number_config_65536_25,dpl
      000269 85 83*10         [24]  705 	mov	(_Segment_write_number_config_65536_25 + 1),dph
      00026C 85 F0*11         [24]  706 	mov	(_Segment_write_number_config_65536_25 + 2),b
                                    707 ;	../HAL/7_Seg.c:106: for(unsigned char i =0; i<4; i++){
      00026F 74 02            [12]  708 	mov	a,#0x02
      000271 25*0F            [12]  709 	add	a,_Segment_write_number_config_65536_25
      000273 FA               [12]  710 	mov	r2,a
      000274 E4               [12]  711 	clr	a
      000275 35*10            [12]  712 	addc	a,(_Segment_write_number_config_65536_25 + 1)
      000277 FB               [12]  713 	mov	r3,a
      000278 AC*11            [24]  714 	mov	r4,(_Segment_write_number_config_65536_25 + 2)
      00027A 75*12 00         [24]  715 	mov	_Segment_write_number_i_131072_27,#0x00
      00027D                        716 00107$:
      00027D 74 FC            [12]  717 	mov	a,#0x100 - 0x04
      00027F 25*12            [12]  718 	add	a,_Segment_write_number_i_131072_27
      000281 40 31            [24]  719 	jc	00101$
                                    720 ;	../HAL/7_Seg.c:107: Seg_en_Port.Pin = config->Seg_Enable_Pins[i];
      000283 E5*12            [12]  721 	mov	a,_Segment_write_number_i_131072_27
      000285 2A               [12]  722 	add	a,r2
      000286 FD               [12]  723 	mov	r5,a
      000287 E4               [12]  724 	clr	a
      000288 3B               [12]  725 	addc	a,r3
      000289 FE               [12]  726 	mov	r6,a
      00028A 8C 07            [24]  727 	mov	ar7,r4
      00028C 8D 82            [24]  728 	mov	dpl,r5
      00028E 8E 83            [24]  729 	mov	dph,r6
      000290 8F F0            [24]  730 	mov	b,r7
      000292 12r00r00         [24]  731 	lcall	__gptrget
      000295 FD               [12]  732 	mov	r5,a
      000296 8D*04            [24]  733 	mov	(_Seg_en_Port + 0x0001),r5
                                    734 ;	../HAL/7_Seg.c:108: GPIO_Write(&Seg_en_Port, GPIO_LOW);
      000298 75*00 00         [24]  735 	mov	_GPIO_Write_PARM_2,#0x00
      00029B 90r00r03         [24]  736 	mov	dptr,#_Seg_en_Port
      00029E 75 F0 40         [24]  737 	mov	b,#0x40
      0002A1 C0 04            [24]  738 	push	ar4
      0002A3 C0 03            [24]  739 	push	ar3
      0002A5 C0 02            [24]  740 	push	ar2
      0002A7 12r00r00         [24]  741 	lcall	_GPIO_Write
      0002AA D0 02            [24]  742 	pop	ar2
      0002AC D0 03            [24]  743 	pop	ar3
      0002AE D0 04            [24]  744 	pop	ar4
                                    745 ;	../HAL/7_Seg.c:106: for(unsigned char i =0; i<4; i++){
      0002B0 05*12            [12]  746 	inc	_Segment_write_number_i_131072_27
      0002B2 80 C9            [24]  747 	sjmp	00107$
      0002B4                        748 00101$:
                                    749 ;	../HAL/7_Seg.c:110: GPIO_PORT_Write(&Seg_port,  seg_digit_map[number % 10]);
      0002B4 AE*0E            [24]  750 	mov	r6,_Segment_write_number_PARM_3
      0002B6 7F 00            [12]  751 	mov	r7,#0x00
      0002B8 75*00 0A         [24]  752 	mov	__modsint_PARM_2,#0x0a
                                    753 ;	1-genFromRTrack replaced	mov	(__modsint_PARM_2 + 1),#0x00
      0002BB 8F*01            [24]  754 	mov	(__modsint_PARM_2 + 1),r7
      0002BD 8E 82            [24]  755 	mov	dpl,r6
      0002BF 8F 83            [24]  756 	mov	dph,r7
      0002C1 12r00r00         [24]  757 	lcall	__modsint
      0002C4 AE 82            [24]  758 	mov	r6,dpl
      0002C6 AF 83            [24]  759 	mov	r7,dph
      0002C8 EE               [12]  760 	mov	a,r6
      0002C9 24r00            [12]  761 	add	a,#_seg_digit_map
      0002CB F5 82            [12]  762 	mov	dpl,a
      0002CD EF               [12]  763 	mov	a,r7
      0002CE 34s00            [12]  764 	addc	a,#(_seg_digit_map >> 8)
      0002D0 F5 83            [12]  765 	mov	dph,a
      0002D2 E4               [12]  766 	clr	a
      0002D3 93               [24]  767 	movc	a,@a+dptr
      0002D4 F5*00            [12]  768 	mov	_GPIO_PORT_Write_PARM_2,a
      0002D6 90r00r00         [24]  769 	mov	dptr,#_Seg_port
      0002D9 75 F0 40         [24]  770 	mov	b,#0x40
      0002DC 12r00r00         [24]  771 	lcall	_GPIO_PORT_Write
                                    772 ;	../HAL/7_Seg.c:111: if(display_number < 4){
      0002DF 74 FC            [12]  773 	mov	a,#0x100 - 0x04
      0002E1 25*0D            [12]  774 	add	a,_Segment_write_number_PARM_2
      0002E3 40 2C            [24]  775 	jc	00103$
                                    776 ;	../HAL/7_Seg.c:112: Seg_en_Port.Pin = config->Seg_Enable_Pins[display_number];
      0002E5 74 02            [12]  777 	mov	a,#0x02
      0002E7 25*0F            [12]  778 	add	a,_Segment_write_number_config_65536_25
      0002E9 FD               [12]  779 	mov	r5,a
      0002EA E4               [12]  780 	clr	a
      0002EB 35*10            [12]  781 	addc	a,(_Segment_write_number_config_65536_25 + 1)
      0002ED FE               [12]  782 	mov	r6,a
      0002EE AF*11            [24]  783 	mov	r7,(_Segment_write_number_config_65536_25 + 2)
      0002F0 E5*0D            [12]  784 	mov	a,_Segment_write_number_PARM_2
      0002F2 2D               [12]  785 	add	a,r5
      0002F3 FD               [12]  786 	mov	r5,a
      0002F4 E4               [12]  787 	clr	a
      0002F5 3E               [12]  788 	addc	a,r6
      0002F6 FE               [12]  789 	mov	r6,a
      0002F7 8D 82            [24]  790 	mov	dpl,r5
      0002F9 8E 83            [24]  791 	mov	dph,r6
      0002FB 8F F0            [24]  792 	mov	b,r7
      0002FD 12r00r00         [24]  793 	lcall	__gptrget
      000300 FD               [12]  794 	mov	r5,a
      000301 8D*04            [24]  795 	mov	(_Seg_en_Port + 0x0001),r5
                                    796 ;	../HAL/7_Seg.c:113: GPIO_Write(&Seg_en_Port, GPIO_HIGH);
      000303 75*00 01         [24]  797 	mov	_GPIO_Write_PARM_2,#0x01
      000306 90r00r03         [24]  798 	mov	dptr,#_Seg_en_Port
      000309 75 F0 40         [24]  799 	mov	b,#0x40
      00030C 12r00r00         [24]  800 	lcall	_GPIO_Write
      00030F 80 01            [24]  801 	sjmp	00104$
      000311                        802 00103$:
                                    803 ;	../HAL/7_Seg.c:115: return;
      000311 22               [24]  804 	ret
      000312                        805 00104$:
                                    806 ;	../HAL/7_Seg.c:117: Tim_delay_ms(1);
      000312 90 00 01         [24]  807 	mov	dptr,#0x0001
      000315 12r00r00         [24]  808 	lcall	_Tim_delay_ms
                                    809 ;	../HAL/7_Seg.c:119: for(unsigned char i =0; i<4; i++){
      000318 74 02            [12]  810 	mov	a,#0x02
      00031A 25*0F            [12]  811 	add	a,_Segment_write_number_config_65536_25
      00031C FD               [12]  812 	mov	r5,a
      00031D E4               [12]  813 	clr	a
      00031E 35*10            [12]  814 	addc	a,(_Segment_write_number_config_65536_25 + 1)
      000320 FE               [12]  815 	mov	r6,a
      000321 AF*11            [24]  816 	mov	r7,(_Segment_write_number_config_65536_25 + 2)
      000323 75*13 00         [24]  817 	mov	_Segment_write_number_i_131072_31,#0x00
      000326                        818 00110$:
      000326 74 FC            [12]  819 	mov	a,#0x100 - 0x04
      000328 25*13            [12]  820 	add	a,_Segment_write_number_i_131072_31
      00032A 40 31            [24]  821 	jc	00112$
                                    822 ;	../HAL/7_Seg.c:120: Seg_en_Port.Pin = config->Seg_Enable_Pins[i];
      00032C E5*13            [12]  823 	mov	a,_Segment_write_number_i_131072_31
      00032E 2D               [12]  824 	add	a,r5
      00032F FA               [12]  825 	mov	r2,a
      000330 E4               [12]  826 	clr	a
      000331 3E               [12]  827 	addc	a,r6
      000332 FB               [12]  828 	mov	r3,a
      000333 8F 04            [24]  829 	mov	ar4,r7
      000335 8A 82            [24]  830 	mov	dpl,r2
      000337 8B 83            [24]  831 	mov	dph,r3
      000339 8C F0            [24]  832 	mov	b,r4
      00033B 12r00r00         [24]  833 	lcall	__gptrget
      00033E FA               [12]  834 	mov	r2,a
      00033F 8A*04            [24]  835 	mov	(_Seg_en_Port + 0x0001),r2
                                    836 ;	../HAL/7_Seg.c:121: GPIO_Write(&Seg_en_Port, GPIO_LOW);
      000341 75*00 00         [24]  837 	mov	_GPIO_Write_PARM_2,#0x00
      000344 90r00r03         [24]  838 	mov	dptr,#_Seg_en_Port
      000347 75 F0 40         [24]  839 	mov	b,#0x40
      00034A C0 07            [24]  840 	push	ar7
      00034C C0 06            [24]  841 	push	ar6
      00034E C0 05            [24]  842 	push	ar5
      000350 12r00r00         [24]  843 	lcall	_GPIO_Write
      000353 D0 05            [24]  844 	pop	ar5
      000355 D0 06            [24]  845 	pop	ar6
      000357 D0 07            [24]  846 	pop	ar7
                                    847 ;	../HAL/7_Seg.c:119: for(unsigned char i =0; i<4; i++){
      000359 05*13            [12]  848 	inc	_Segment_write_number_i_131072_31
      00035B 80 C9            [24]  849 	sjmp	00110$
      00035D                        850 00112$:
                                    851 ;	../HAL/7_Seg.c:124: }
      00035D 22               [24]  852 	ret
                                    853 ;------------------------------------------------------------
                                    854 ;Allocation info for local variables in function 'Multi_Segment_write_Digits'
                                    855 ;------------------------------------------------------------
                                    856 ;number                    Allocated with name '_Multi_Segment_write_Digits_PARM_2'
                                    857 ;config                    Allocated with name '_Multi_Segment_write_Digits_config_65536_33'
                                    858 ;is_negative               Allocated with name '_Multi_Segment_write_Digits_is_negative_65536_34'
                                    859 ;n                         Allocated to registers r3 r4 
                                    860 ;dig                       Allocated to registers r2 
                                    861 ;seg_no                    Allocated to registers 
                                    862 ;------------------------------------------------------------
                                    863 ;	../HAL/7_Seg.c:127: void Multi_Segment_write_Digits(Seg_config_t *config, int number){
                                    864 ;	-----------------------------------------
                                    865 ;	 function Multi_Segment_write_Digits
                                    866 ;	-----------------------------------------
      00035E                        867 _Multi_Segment_write_Digits:
      00035E 85 82*16         [24]  868 	mov	_Multi_Segment_write_Digits_config_65536_33,dpl
      000361 85 83*17         [24]  869 	mov	(_Multi_Segment_write_Digits_config_65536_33 + 1),dph
      000364 85 F0*18         [24]  870 	mov	(_Multi_Segment_write_Digits_config_65536_33 + 2),b
                                    871 ;	../HAL/7_Seg.c:129: int n = number;
      000367 AB*14            [24]  872 	mov	r3,_Multi_Segment_write_Digits_PARM_2
      000369 AC*15            [24]  873 	mov	r4,(_Multi_Segment_write_Digits_PARM_2 + 1)
                                    874 ;	../HAL/7_Seg.c:130: unsigned char dig = 0;
      00036B 7A 00            [12]  875 	mov	r2,#0x00
                                    876 ;	../HAL/7_Seg.c:132: if(number > 9999){
      00036D C3               [12]  877 	clr	c
      00036E 74 0F            [12]  878 	mov	a,#0x0f
      000370 9B               [12]  879 	subb	a,r3
      000371 74 A7            [12]  880 	mov	a,#(0x27 ^ 0x80)
      000373 8C F0            [24]  881 	mov	b,r4
      000375 63 F0 80         [24]  882 	xrl	b,#0x80
      000378 95 F0            [12]  883 	subb	a,b
      00037A 50 06            [24]  884 	jnc	00104$
                                    885 ;	../HAL/7_Seg.c:133: n = 9999;
      00037C 7B 0F            [12]  886 	mov	r3,#0x0f
      00037E 7C 27            [12]  887 	mov	r4,#0x27
      000380 80 0F            [24]  888 	sjmp	00105$
      000382                        889 00104$:
                                    890 ;	../HAL/7_Seg.c:134: }else if(number < -999){ 
      000382 C3               [12]  891 	clr	c
      000383 EB               [12]  892 	mov	a,r3
      000384 94 19            [12]  893 	subb	a,#0x19
      000386 EC               [12]  894 	mov	a,r4
      000387 64 80            [12]  895 	xrl	a,#0x80
      000389 94 7C            [12]  896 	subb	a,#0x7c
      00038B 50 04            [24]  897 	jnc	00105$
                                    898 ;	../HAL/7_Seg.c:135: n = -999;
      00038D 7B 19            [12]  899 	mov	r3,#0x19
      00038F 7C FC            [12]  900 	mov	r4,#0xfc
      000391                        901 00105$:
                                    902 ;	../HAL/7_Seg.c:137: is_negative = (number < 0) ? true : false;
      000391 E5*15            [12]  903 	mov	a,(_Multi_Segment_write_Digits_PARM_2 + 1)
      000393 33               [12]  904 	rlc	a
      000394 E4               [12]  905 	clr	a
      000395 33               [12]  906 	rlc	a
                                    907 ;	../HAL/7_Seg.c:139: if(is_negative){
      000396 F5*19            [12]  908 	mov	_Multi_Segment_write_Digits_is_negative_65536_34,a
      000398 A9*19            [24]  909 	mov	r1,_Multi_Segment_write_Digits_is_negative_65536_34
      00039A 60 07            [24]  910 	jz	00119$
                                    911 ;	../HAL/7_Seg.c:140: n *= -1;
      00039C C3               [12]  912 	clr	c
      00039D E4               [12]  913 	clr	a
      00039E 9B               [12]  914 	subb	a,r3
      00039F FB               [12]  915 	mov	r3,a
      0003A0 E4               [12]  916 	clr	a
      0003A1 9C               [12]  917 	subb	a,r4
      0003A2 FC               [12]  918 	mov	r4,a
                                    919 ;	../HAL/7_Seg.c:143: while (n)
      0003A3                        920 00119$:
      0003A3 78 00            [12]  921 	mov	r0,#0x00
      0003A5                        922 00108$:
      0003A5 EB               [12]  923 	mov	a,r3
      0003A6 4C               [12]  924 	orl	a,r4
      0003A7 60 5D            [24]  925 	jz	00110$
                                    926 ;	../HAL/7_Seg.c:145: dig = n % 10;
      0003A9 75*00 0A         [24]  927 	mov	__modsint_PARM_2,#0x0a
      0003AC 75*01 00         [24]  928 	mov	(__modsint_PARM_2 + 1),#0x00
      0003AF 8B 82            [24]  929 	mov	dpl,r3
      0003B1 8C 83            [24]  930 	mov	dph,r4
      0003B3 C0 04            [24]  931 	push	ar4
      0003B5 C0 03            [24]  932 	push	ar3
      0003B7 C0 01            [24]  933 	push	ar1
      0003B9 C0 00            [24]  934 	push	ar0
      0003BB 12r00r00         [24]  935 	lcall	__modsint
      0003BE AE 82            [24]  936 	mov	r6,dpl
      0003C0 D0 00            [24]  937 	pop	ar0
      0003C2 D0 01            [24]  938 	pop	ar1
      0003C4 8E 02            [24]  939 	mov	ar2,r6
                                    940 ;	../HAL/7_Seg.c:147: Segment_write_number(config, seg_no, dig);
      0003C6 88*0D            [24]  941 	mov	_Segment_write_number_PARM_2,r0
      0003C8 8A*0E            [24]  942 	mov	_Segment_write_number_PARM_3,r2
      0003CA 85*16 82         [24]  943 	mov	dpl,_Multi_Segment_write_Digits_config_65536_33
      0003CD 85*17 83         [24]  944 	mov	dph,(_Multi_Segment_write_Digits_config_65536_33 + 1)
      0003D0 85*18 F0         [24]  945 	mov	b,(_Multi_Segment_write_Digits_config_65536_33 + 2)
      0003D3 C0 02            [24]  946 	push	ar2
      0003D5 C0 01            [24]  947 	push	ar1
      0003D7 C0 00            [24]  948 	push	ar0
      0003D9 12r02r66         [24]  949 	lcall	_Segment_write_number
      0003DC D0 00            [24]  950 	pop	ar0
      0003DE D0 01            [24]  951 	pop	ar1
      0003E0 D0 02            [24]  952 	pop	ar2
      0003E2 D0 03            [24]  953 	pop	ar3
      0003E4 D0 04            [24]  954 	pop	ar4
                                    955 ;	../HAL/7_Seg.c:148: n = n/10;
      0003E6 75*00 0A         [24]  956 	mov	__divsint_PARM_2,#0x0a
      0003E9 75*01 00         [24]  957 	mov	(__divsint_PARM_2 + 1),#0x00
      0003EC 8B 82            [24]  958 	mov	dpl,r3
      0003EE 8C 83            [24]  959 	mov	dph,r4
      0003F0 C0 02            [24]  960 	push	ar2
      0003F2 C0 01            [24]  961 	push	ar1
      0003F4 C0 00            [24]  962 	push	ar0
      0003F6 12r00r00         [24]  963 	lcall	__divsint
      0003F9 AB 82            [24]  964 	mov	r3,dpl
      0003FB AC 83            [24]  965 	mov	r4,dph
      0003FD D0 00            [24]  966 	pop	ar0
      0003FF D0 01            [24]  967 	pop	ar1
      000401 D0 02            [24]  968 	pop	ar2
                                    969 ;	../HAL/7_Seg.c:149: seg_no++;
      000403 08               [12]  970 	inc	r0
      000404 80 9F            [24]  971 	sjmp	00108$
      000406                        972 00110$:
                                    973 ;	../HAL/7_Seg.c:152: if(is_negative){
      000406 E9               [12]  974 	mov	a,r1
      000407 60 12            [24]  975 	jz	00113$
                                    976 ;	../HAL/7_Seg.c:153: seg_no++;
      000409 E8               [12]  977 	mov	a,r0
      00040A 04               [12]  978 	inc	a
      00040B F5*0D            [12]  979 	mov	_Segment_write_number_PARM_2,a
                                    980 ;	../HAL/7_Seg.c:154: Segment_write_number(config, seg_no, dig);
      00040D 8A*0E            [24]  981 	mov	_Segment_write_number_PARM_3,r2
      00040F 85*16 82         [24]  982 	mov	dpl,_Multi_Segment_write_Digits_config_65536_33
      000412 85*17 83         [24]  983 	mov	dph,(_Multi_Segment_write_Digits_config_65536_33 + 1)
      000415 85*18 F0         [24]  984 	mov	b,(_Multi_Segment_write_Digits_config_65536_33 + 2)
                                    985 ;	../HAL/7_Seg.c:157: }
      000418 02r02r66         [24]  986 	ljmp	_Segment_write_number
      00041B                        987 00113$:
      00041B 22               [24]  988 	ret
                                    989 ;------------------------------------------------------------
                                    990 ;Allocation info for local variables in function 'Segment_Write_char'
                                    991 ;------------------------------------------------------------
                                    992 ;text                      Allocated with name '_Segment_Write_char_PARM_2'
                                    993 ;config                    Allocated with name '_Segment_Write_char_config_65536_40'
                                    994 ;g                         Allocated to registers 
                                    995 ;len                       Allocated to registers r1 
                                    996 ;------------------------------------------------------------
                                    997 ;	../HAL/7_Seg.c:160: void Segment_Write_char(Seg_config_t *config, char *text){
                                    998 ;	-----------------------------------------
                                    999 ;	 function Segment_Write_char
                                   1000 ;	-----------------------------------------
      00041C                       1001 _Segment_Write_char:
      00041C 85 82*1D         [24] 1002 	mov	_Segment_Write_char_config_65536_40,dpl
      00041F 85 83*1E         [24] 1003 	mov	(_Segment_Write_char_config_65536_40 + 1),dph
      000422 85 F0*1F         [24] 1004 	mov	(_Segment_Write_char_config_65536_40 + 2),b
                                   1005 ;	../HAL/7_Seg.c:161: unsigned char *g = text;
      000425 AA*1A            [24] 1006 	mov	r2,_Segment_Write_char_PARM_2
      000427 AB*1B            [24] 1007 	mov	r3,(_Segment_Write_char_PARM_2 + 1)
      000429 AC*1C            [24] 1008 	mov	r4,(_Segment_Write_char_PARM_2 + 2)
                                   1009 ;	../HAL/7_Seg.c:164: while (*g)
      00042B 79 04            [12] 1010 	mov	r1,#0x04
      00042D                       1011 00105$:
      00042D 8A 82            [24] 1012 	mov	dpl,r2
      00042F 8B 83            [24] 1013 	mov	dph,r3
      000431 8C F0            [24] 1014 	mov	b,r4
      000433 12r00r00         [24] 1015 	lcall	__gptrget
      000436 F8               [12] 1016 	mov	r0,a
      000437 60 4D            [24] 1017 	jz	00108$
                                   1018 ;	../HAL/7_Seg.c:166: if(len <= 4 && len != 0){
      000439 E9               [12] 1019 	mov	a,r1
      00043A 24 FB            [12] 1020 	add	a,#0xff - 0x04
      00043C 40 48            [24] 1021 	jc	00102$
      00043E E9               [12] 1022 	mov	a,r1
      00043F 60 45            [24] 1023 	jz	00102$
                                   1024 ;	../HAL/7_Seg.c:167: Segment_write(config, len-1, LUT(*g));
      000441 89 07            [24] 1025 	mov	ar7,r1
      000443 1F               [12] 1026 	dec	r7
      000444 88 82            [24] 1027 	mov	dpl,r0
      000446 C0 07            [24] 1028 	push	ar7
      000448 C0 04            [24] 1029 	push	ar4
      00044A C0 03            [24] 1030 	push	ar3
      00044C C0 02            [24] 1031 	push	ar2
      00044E C0 01            [24] 1032 	push	ar1
      000450 12r00r00         [24] 1033 	lcall	_LUT
      000453 85 82*07         [24] 1034 	mov	_Segment_write_PARM_3,dpl
      000456 D0 01            [24] 1035 	pop	ar1
      000458 D0 02            [24] 1036 	pop	ar2
      00045A D0 03            [24] 1037 	pop	ar3
      00045C D0 04            [24] 1038 	pop	ar4
      00045E D0 07            [24] 1039 	pop	ar7
      000460 8F*06            [24] 1040 	mov	_Segment_write_PARM_2,r7
      000462 85*1D 82         [24] 1041 	mov	dpl,_Segment_Write_char_config_65536_40
      000465 85*1E 83         [24] 1042 	mov	dph,(_Segment_Write_char_config_65536_40 + 1)
      000468 85*1F F0         [24] 1043 	mov	b,(_Segment_Write_char_config_65536_40 + 2)
      00046B C0 04            [24] 1044 	push	ar4
      00046D C0 03            [24] 1045 	push	ar3
      00046F C0 02            [24] 1046 	push	ar2
      000471 C0 01            [24] 1047 	push	ar1
      000473 12r01r8D         [24] 1048 	lcall	_Segment_write
      000476 D0 01            [24] 1049 	pop	ar1
      000478 D0 02            [24] 1050 	pop	ar2
      00047A D0 03            [24] 1051 	pop	ar3
      00047C D0 04            [24] 1052 	pop	ar4
                                   1053 ;	../HAL/7_Seg.c:168: g++;
      00047E 0A               [12] 1054 	inc	r2
      00047F BA 00 01         [24] 1055 	cjne	r2,#0x00,00129$
      000482 0B               [12] 1056 	inc	r3
      000483                       1057 00129$:
                                   1058 ;	../HAL/7_Seg.c:169: len--;
      000483 19               [12] 1059 	dec	r1
      000484 80 A7            [24] 1060 	sjmp	00105$
      000486                       1061 00102$:
                                   1062 ;	../HAL/7_Seg.c:171: return;
      000486                       1063 00108$:
                                   1064 ;	../HAL/7_Seg.c:177: }
      000486 22               [24] 1065 	ret
                                   1066 	.area CSEG    (CODE)
                                   1067 	.area CONST   (CODE)
      000000                       1068 _seg_digit_map:
      000000 3F                    1069 	.db #0x3f	; 63
      000001 06                    1070 	.db #0x06	; 6
      000002 5B                    1071 	.db #0x5b	; 91
      000003 4F                    1072 	.db #0x4f	; 79	'O'
      000004 66                    1073 	.db #0x66	; 102	'f'
      000005 6D                    1074 	.db #0x6d	; 109	'm'
      000006 7D                    1075 	.db #0x7d	; 125
      000007 07                    1076 	.db #0x07	; 7
      000008 7F                    1077 	.db #0x7f	; 127
      000009 6F                    1078 	.db #0x6f	; 111	'o'
      00000A 80                    1079 	.db #0x80	; 128
                                   1080 	.area XINIT   (CODE)
                                   1081 	.area CABS    (ABS,CODE)
